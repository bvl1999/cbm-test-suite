; often used zeropage locations

cpugpioctl    = $00                  ; cpu gpio port direction register
cpugpio       = $01                  ; cpu gpio port
jfarbnk       = $02                  ; bank for jmpfar/jsrfar
jfaraddr      = $03                  ; address for jmpfar/jsrfar
jfarpsr       = $05                  ; tmp storage for status register for jmpfar/jsrfar
jfarar        = $06                  ; tmp storage for a register for jmpfar/jsrfar
jfarxr        = $07                  ; tmp storage for x register for jmpfar/jsrfar
jfaryr        = $08                  ; tmp storage for y register for jmpfar/jsrfar
jfarsp        = $09                  ; tmp storage for sp register for jsrfar/monitor
basicstart    = $2d                  ; start of basic
variablestart = $2f                  ; start of variables
arraystart    = $31                  ; start of arrays
freestart     = $33                  ; start of free memory
stringstart   = $35                  ; start of strings
strpooltmpptr = $37                  ; temporary pointer into string pool
memorytop     = $39                  ; top of memory
basicline     = $3b                  ; basic line number
basicchrptr   = $3d                  ; basic char input pointer
workptr       = $3f                  ; working pointer for various routines
dataline      = $41                  ; line number of current data statement
dataptr       = $43                  ; pointer to next data item
inputptr      = $45                  ; input text pointer
variablename  = $47                  ; current variable name
iecstatus     = $90                  ; iec device status register
stkey         = $91                  ; value of stop key row
verifyflag    = $93                  ; verify flag
tmpxstore     = $97                  ; temporary storage for X register
ldtnd         = $98                  ; number of open files
inputdev      = $99                  ; current input device
outputdev     = $9a                  ; current output device
msgflg        = $9d                  ; kernal message flag
; ac-af have multiple uses, one during boot, one during normal operations
kworkptr1     = $ac                  ; location for current byte during tape and disk load/save
boot2ptr      = $ac                  ; start address for additional boot sectors (first goes to $0B00)
kworkptr2     = $ae                  ; end address for tape and disk load/save operations
bootbnk       = $ae                  ; bank for additional boot sectors
bootcount     = $af                  ; number of additional boot sectors to be read
namelen       = $b7                  ; filename length
lfnum         = $b8                  ; logical file number
secaddr       = $b9                  ; secondary address
dv            = $ba                  ; current iec device number
filename      = $bb                  ; current file name pointer
bootdev       = $bf                  ; boot device for phoenix (petscii)
kaddrptr1     = $c1                  ; holds start address during save or current t/s numbers during disk boot
kaddrptr2     = $c3                  ; holds load address (used when secondary address is 0) and used as working pointer during reset
ba            = $c6                  ; bank for load/save
fnbank        = $c7                  ; bank for current filename
ndx           = $d0                  ; index into keyboard buffer
curkey        = $d4
scrwidth      = $ee                  ; current screen width
uval1         = $fa                  ; free (user temp val 1)
uptr1         = $fb                  ; user pointer 1
uptr2         = $fd                  ; user pointer 2
